generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  clerkId   String   @unique
  email     String   @unique
  username  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  projects  Project[]
  apiKeys   ProjectApiKey[]
}

model Project {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String   @db.ObjectId
  user        User     @relation(fields: [userId], references: [id])
  Templates   Template[]
  ApiKeys     ProjectApiKey[]
}


model ProjectApiKey {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  secretKey    String   @unique
  publicKey String   @unique
  projectId String   @db.ObjectId
  project   Project  @relation(fields: [projectId], references: [id])
  userId   String   @db.ObjectId
  user     User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Template {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  description    String
  templateUrl    String?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  templateDataId String?       @unique @db.ObjectId
  TemplateData   TemplateData?
  projectId      String        @db.ObjectId
  project        Project       @relation(fields: [projectId], references: [id])
}

model TemplateData {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  templateId String   @unique @db.ObjectId
  template   Template @relation(fields: [templateId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
